/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaApplication1;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author marcu
 */
public class Hantera_Utrustning extends javax.swing.JFrame {

    static Validering vemArInloggad;
    static InfDB idb;

    /**
     * Creates new form Hantera_Utrustning
     */
    public Hantera_Utrustning(InfDB idb, Validering vemArInloggad) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.idb = idb;
        this.vemArInloggad = vemArInloggad;
        fyllCBMedUtrustning();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHanteraUtrustning = new javax.swing.JLabel();
        txtUtID = new javax.swing.JTextField();
        lblSOK = new javax.swing.JLabel();
        lblUtrustningID = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        txtBenamning = new javax.swing.JTextField();
        lblBenamning = new javax.swing.JLabel();
        cbUtrustning = new javax.swing.JComboBox<>();
        btnTillbaka = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHanteraUtrustning.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblHanteraUtrustning.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHanteraUtrustning.setText("Hantera utrustning");

        txtUtID.setEditable(false);

        lblSOK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSOK.setText("Sök på utrustning:");

        lblUtrustningID.setText("Utrustning ID:");

        btnDelete.setText("Ta bort");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtBenamning.setEditable(false);
        txtBenamning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBenamningActionPerformed(evt);
            }
        });

        lblBenamning.setText("Benämning:");

        cbUtrustning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbUtrustningActionPerformed(evt);
            }
        });

        btnTillbaka.setText("Gå tillbaka");
        btnTillbaka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(107, 107, 107)
                            .addComponent(lblHanteraUtrustning))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblBenamning)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblUtrustningID)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtUtID, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTillbaka)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblSOK, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lblHanteraUtrustning)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSOK, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUtrustning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUtrustningID)
                    .addComponent(txtUtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBenamning)
                    .addComponent(txtBenamning, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTillbaka))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (Validering.kontrollForComboBox(cbUtrustning) && Validering.kontrollForComboBox(cbUtrustning)) {
            try {
                // TODO add your handling code here:
                String enUtrustning = cbUtrustning.getSelectedItem().toString();
                String utrustningsID = txtUtID.getText();

                String fraga = "delete from utrustning where benamning = '" + hamtaUtrustningsBenamning() + "';";
                String fraga2 = "delete from innehar_utrustning where utrustnings_id = '" + hamtaUtrustningsID() + "';";
                idb.delete(fraga2);       
                idb.delete(fraga);
             
                if (kommunikationValt()) {
                    String fragaKomm = "delete from kommunikation where utrustnings_id = '" + utrustningsID + "';";
                    idb.delete(fragaKomm);
                }
                if (vapenValt()) {
                    String fragaVapen = "delete from vapen where utrustnings_id = '" + utrustningsID + "';";
                    idb.delete(fragaVapen);
                }
                if (teknikValt()) {
                    String fragaTek = "delete from teknik where utrustnings_id = '" + utrustningsID + "';";
                    idb.delete(fragaTek);
                }
  
                JOptionPane.showMessageDialog(this, "Du har nu tagit bort utrustningen: " + enUtrustning
                        + " med id: " + txtUtID.getText());

                txtUtID.setText("");
                txtBenamning.setText("");
                cbUtrustning.removeItem(enUtrustning); // Tar bort vald utrustning från comboboxen
                
                cbUtrustning.setSelectedIndex(0); // Sätter fokus på översta (index 0) utrustning.

            } catch (InfException ex) {
                Logger.getLogger(Hantera_Utrustning.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex + " något fel tydligen...");
            }

        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void fyllCBMedUtrustning() {
        String fraga = "SELECT benamning from utrustning";

        ArrayList<String> utrustningLista;

        try {

            utrustningLista = idb.fetchColumn(fraga);

            for (String namn : utrustningLista) {
                cbUtrustning.addItem(namn);
            }

        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Databasfel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        } catch (Exception ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }

    }

    private boolean vapenValt() throws InfException {

        boolean lyckad = false;
        String nyID = txtUtID.getText();

        String fraga2 = "select utrustnings_ID from vapen where Utrustnings_ID = " + nyID + ";";
        String hamtatID = idb.fetchSingle(fraga2);

        if (nyID.equals(hamtatID)) {

            lyckad = true;
        }
        return lyckad;
    }

    private boolean kommunikationValt() throws InfException {

        boolean lyckad = false;
        String nyID = txtUtID.getText();

        String fraga2 = "select utrustnings_ID from kommunikation where Utrustnings_ID = " + nyID + ";";
        String hamtatID = idb.fetchSingle(fraga2);

        if (nyID.equals(hamtatID)) {

            lyckad = true;
        }

        return lyckad;
    }

    private boolean teknikValt() throws InfException {

        boolean lyckad = false;
        String nyID = txtUtID.getText();

        String fraga2 = "select utrustnings_ID from teknik where Utrustnings_ID = " + nyID + ";";
        String hamtatID = idb.fetchSingle(fraga2);

        if (nyID.equals(hamtatID)) {

            lyckad = true;
        }
        return lyckad;
    }

    private String hamtaUtrustningsID() throws InfException {

        String enUtrustning = cbUtrustning.getSelectedItem().toString();
        String fraga = "Select utrustnings_id from utrustning where benamning = '" + enUtrustning + "';";
        String hamtaID = idb.fetchSingle(fraga);

        return hamtaID;
    }

    private String hamtaUtrustningsBenamning() throws InfException {
        String enUtrustning = cbUtrustning.getSelectedItem().toString();
        String fraga = "Select benamning from utrustning where benamning = '" + enUtrustning + "';";
        String hamtaBenamning = idb.fetchSingle(fraga);

        return hamtaBenamning;
    }
    private void cbUtrustningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbUtrustningActionPerformed

        try {
            // TODO add your handling code here:

            txtUtID.setText(hamtaUtrustningsID());
            txtBenamning.setText(hamtaUtrustningsBenamning());
        } catch (InfException ex) {
            Logger.getLogger(Hantera_Utrustning.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_cbUtrustningActionPerformed

    private void txtBenamningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBenamningActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtBenamningActionPerformed

    private void btnTillbakaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Admin(idb, vemArInloggad).setVisible(true);
    }//GEN-LAST:event_btnTillbakaActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnTillbaka;
    private javax.swing.JComboBox<String> cbUtrustning;
    private javax.swing.JLabel lblBenamning;
    private javax.swing.JLabel lblHanteraUtrustning;
    private javax.swing.JLabel lblSOK;
    private javax.swing.JLabel lblUtrustningID;
    private javax.swing.JTextField txtBenamning;
    private javax.swing.JTextField txtUtID;
    // End of variables declaration//GEN-END:variables
}
