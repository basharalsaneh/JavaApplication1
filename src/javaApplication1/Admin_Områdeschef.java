/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaApplication1;

import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author kristofffer
 */
public class Admin_Områdeschef extends javax.swing.JFrame {

    private InfDB idb;

    /**
     * Creates new form Admin_områdesOchKontorsChef
     */
    public Admin_Områdeschef(InfDB idb) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.idb = idb;
        fyllCombobox();
    }

    private void fyllCombobox() {

        platsCombo.removeAllItems();
        valjChef.removeAllItems();

        String platsFraga = "SELECT Benamning from OMRADE";
        String agentFraga = "SELECT Agent_ID, namn FROM Agent";

        ArrayList<String> allaOmradenamn;
        ArrayList<HashMap<String, String>> allaAgentnamn;

        try {

            allaOmradenamn = idb.fetchColumn(platsFraga);
            allaAgentnamn = idb.fetchRows(agentFraga);

            for (String namn : allaOmradenamn) {
                platsCombo.addItem(namn);
            }

            for (HashMap<String, String> agent : allaAgentnamn) {
                String agenter = "ID: " + agent.get("Agent_ID") + ", " + agent.get("namn");
                valjChef.addItem(agenter);
            }

        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Databasfel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        } catch (Exception ettUndantag) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaOmrade = new javax.swing.JTextArea();
        platsCombo = new javax.swing.JComboBox<>();
        valjChef = new javax.swing.JComboBox<>();
        andraOmradeschefKnapp = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtAreaOmrade.setColumns(20);
        txtAreaOmrade.setRows(5);
        jScrollPane1.setViewportView(txtAreaOmrade);

        platsCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                platsComboActionPerformed(evt);
            }
        });

        andraOmradeschefKnapp.setText("Ändra områdeschef");
        andraOmradeschefKnapp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                andraOmradeschefKnappActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Gå tillbaka");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Välj Område");

        jLabel2.setText("Välj ny områdeschef");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(valjChef, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(platsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(andraOmradeschefKnapp)
                            .addComponent(jToggleButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jToggleButton2)
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(platsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(valjChef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(andraOmradeschefKnapp)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void platsComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_platsComboActionPerformed
        // TODO add your handling code here:
        txtAreaOmrade.setText("");
        txtAreaOmrade.append("AGENT_ID\t Namn \t TELEFON \n"
                + "--------\t-------\t------------\n");

        ArrayList<HashMap<String, String>> allaOmradeschefer;

        try {

            String valdOmrade = platsCombo.getSelectedItem().toString();

            String fraga = "SELECT a.Agent_ID, namn, telefon FROM (agent a JOIN omradeschef ON a.Agent_ID = omradeschef.Agent_ID) JOIN omrade on Omrades_ID = omradeschef.Omrade WHERE Omrade.Benamning = '" + valdOmrade + "'";
//"SELECT Agent_ID, namn, telefon FROM agent WHERE Agent_ID = (Select Agent_ID from Omradeschef where Omrade = '" + valdOmrade + "')";
            allaOmradeschefer = idb.fetchRows(fraga);

            for (HashMap<String, String> agent : allaOmradeschefer) {
                txtAreaOmrade.append(agent.get("Agent_ID") + "\t");
                txtAreaOmrade.append(agent.get("namn") + "\t");
                txtAreaOmrade.append(agent.get("telefon") + "\n");
            }

        } catch (InfException ettUndantag) {
            JOptionPane.showMessageDialog(null, "Databasfel!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        } catch (Exception ettUndantag) { //lägger även till nullpointer exception
            JOptionPane.showMessageDialog(null, "Ett fel uppstod!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
    }//GEN-LAST:event_platsComboActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Admin_HanteraAgenterMeny(idb).setVisible(true);
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void andraOmradeschefKnappActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_andraOmradeschefKnappActionPerformed
        // TODO add your handling code here:
        txtAreaOmrade.setText("");
        boolean nuvarandeChef = false;
        //String valtOmrade = platsCombo.getSelectedItem().toString();
        String chef = valjChef.getSelectedItem().toString();
        String baraID = chef.replaceAll("\\D+", "");
        int nyOmradesChefID = Integer.parseInt(baraID);

        try {
            String fraga = "SELECT a.agent_id FROM AGENT a "
                    + "JOIN omradeschef oc ON a.agent_id = oc.agent_id "
                    + "JOIN omrade o on oc.omrade = o.omrades_id "
                    + "WHERE benamning =" + "'" + platsCombo.getSelectedItem() + "'";
            String nuChef = idb.fetchSingle(fraga);
            
            String allaChefer = "SELECT agent_id FROM AGENT JOIN omradeschef USING (agent_id)";
            ArrayList<String> Chef = idb.fetchColumn(allaChefer);

                for (String element : Chef) {
                    if (element.equals(nyOmradesChefID)) {
                        nuvarandeChef = true;
                        System.out.println(element);
                        break;
                    }
                }
                
                if (nuvarandeChef == false) {

                    String qUpdate = "UPDATE Omradeschef SET AGENT_ID = '" + nyOmradesChefID + "'WHERE Agent_ID = '" + nuChef + "'";
                    idb.update(qUpdate);
                    JOptionPane.showMessageDialog(null, "Områdets chef är nu uppdaterad!");

                }else {
                    JOptionPane.showMessageDialog(null, "Agenten är redan chef för ett annat område");
                }

            } catch (InfException ex) {
                System.out.println("Databasfel" + ex.getMessage());
            } 
        
    }//GEN-LAST:event_andraOmradeschefKnappActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton andraOmradeschefKnapp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JComboBox<String> platsCombo;
    private javax.swing.JTextArea txtAreaOmrade;
    private javax.swing.JComboBox<String> valjChef;
    // End of variables declaration//GEN-END:variables
}
